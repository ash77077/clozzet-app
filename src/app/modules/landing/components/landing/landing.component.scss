.image {
  border-radius: 4px;
  border: 0;
  display: inline-block;
  position: relative;
}

.tiles {
  display: flex;
  flex-wrap: wrap;
  position: relative;
  gap: 16px;
  padding: 16px;
  justify-content: center;
}

.tiles article {
  transition: transform 0.5s ease,
  opacity 0.5s ease;
  position: relative;
  width: calc(33.33333% - 16px);
  cursor: pointer;
}

.tiles article > .image {
  transition: transform 0.5s ease;
  position: relative;
  display: block;
  width: 100%;
  border-radius: 4px;
  overflow: hidden;
}

.h-800 {
  height: 650px;
}

.tiles article > .image img {
  display: block;
  width: 100%;
}

.tiles article > .image:before {
  pointer-events: none;
  transition: background-color 0.5s ease,
  opacity 0.5s ease;
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  opacity: 0.8;
}

.tiles article > .image:after {
  pointer-events: none;
  transition: opacity 0.5s ease;
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' preserveAspectRatio='none'%3E%3Cstyle%3Eline %7B stroke-width: 0.25px%3B stroke: %23ffffff%3B %7D%3C/style%3E%3Cline x1='0' y1='0' x2='100' y2='100' /%3E%3Cline x1='100' y1='0' x2='0' y2='100' /%3E%3C/svg%3E");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100% 100%;
  opacity: 0.25;
  z-index: 2;
}

.tiles article > .txt-info {
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: background-color 0.5s ease,
  transform 0.5s ease;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 1em;
  border-radius: 4px;
  border-bottom: 0;
  color: #ffffff;
  text-align: center;
  text-decoration: none;
  z-index: 3;
}

.txt-info:hover {
  color: #ffffff !important;
}

.tiles article > .txt-info h2 {
  margin: 0;
}

.tiles article:hover .txt-info .content {
  max-height: 15em;
  opacity: 1;
}

.tiles article {
  & > .txt-info .content {
    transition: max-height 0.5s ease,
    opacity 0.5s ease;
    width: 100%;
    max-height: 0;
    line-height: 1.5;
    margin-top: 0.35em;
    opacity: 0;
  }
}

.tiles article.style2 > .image:before {
  background-color: #7ecaf6;
}

.tiles article:hover {
  & > .image {
    transform: scale(1.03);
  }
}

.tiles article:hover {
  & > .image:before {
    background-color: #081468;
    opacity: 0.35;
  }
}

.tiles article:hover {
  & > .image:after {
    opacity: 0;
  }
}

article:hover {
  .content {
    z-index: 8888;
    max-height: 15em;
    opacity: 1;
  }
}

* + .tiles {
  margin-top: 2em;
}

@media screen and (max-width: 1280px) {
  .tiles {
    padding: 0;
  }
}

@media screen and (max-width: 736px) {
  .tiles article {
    width: calc(50% - 20px);
  }

  .tiles {
    padding: 0;
  }
}

@media screen and (max-width: 360px) {
  .tiles {
    margin: 0;

  }

  .tiles article {
    width: 100%;
    margin: 0;
  }
}

.container {
  margin-inline: auto;
  padding-inline: calc(var(--spacing) * 4);
}

.landing-slider {
  display: grid;
  grid-template-columns: 2fr 5fr;
}

@media screen and (max-width: 900px) {
  .landing-slider {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    padding: 16px 35px;
  }
}










.animation-card {
  isolation: isolate;
}

.media-object {
  --border-width: 3px;
  --radius: 24px;

  position: relative;
  border-radius: var(--radius);
  border: var(--border-width) solid transparent;
}

.media-object::before {
  content: " ";
  position: absolute;
  inset: calc(var(--border-width) * -1);
  z-index: -1;
  border: inherit;
  border-radius: inherit;
  background-image: conic-gradient(from var(--angle), #381D6A 80%, #E0D1FF 88%, #E0D1FF 92%, #381D6A 100%);
  background-origin: border-box;
  mask: linear-gradient(black, black), linear-gradient(black, black);
  mask-clip: content-box, border-box;
  mask-composite: exclude;
  animation: spin 3s linear infinite;
}

@supports not (background: paint(something)) {
  .media-object::before {
    background-image: conic-gradient(#381D6A 80%, #E0D1FF 88%, #E0D1FF 92%, #381D6A 100%);
  }
}

.media-object:hover::before {
  animation-play-state: paused;
}

@property --angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}

@keyframes spin {
  to {
    --angle: 1turn;
  }
}

.media-object {
  display: flex;
  justify-content: space-between;
  align-items: end;
  padding: 24px;
}


